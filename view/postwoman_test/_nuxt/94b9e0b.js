(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{659:function(e,t,n){"use strict";n(125);t.a=function(e,t){var n;return function(){var r=this,o=arguments;clearTimeout(n),n=setTimeout((function(){return e.apply(r,o)}),t)}}},777:function(e,t,n){var content=n(844);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,n(64).default)("4176ce4c",content,!0,{sourceMap:!1})},839:function(e){e.exports=JSON.parse('{"!name":"ecmascript","!define":{"Error.prototype":"Error.prototype","propertyDescriptor":{"enumerable":"bool","configurable":"bool","value":"?","writable":"bool","get":"fn() -> ?","set":"fn(value: ?)"},"Promise.prototype":{"catch":{"!type":"fn(onRejected: fn(reason: ?)) -> !this"},"then":{"!type":"fn(onFulfilled: fn(value: ?), onRejected: fn(reason: ?)) -> !custom:Promise_then","!effects":["call !0 !this.:t"]},"finally":{"!type":"fn(onFinally: fn()) -> !custom:Promise_then"}},"Promise_reject":{"!type":"fn(reason: ?) -> !this"},"iter_prototype":{":Symbol.iterator":"fn() -> !this"},"iter":{"!proto":"iter_prototype","next":{"!type":"fn() -> +iter_result[value=!this.:t]"}},"iter_result":{"done":"bool","value":"?"},"generator_prototype":{"!proto":"iter_prototype","next":"fn(value?: ?) -> iter_result","return":"fn(value?: ?) -> iter_result","throw":"fn(exception: +Error)"},"async_iter_prototype":{":Symbol.asyncIterator":"fn() -> !this"},"async_iter":{"!proto":"async_iter_prototype","next":{"!type":"fn() -> +Promise[:t=+iter_result[value=!this.:t]]"}},"async_generator_prototype":{"!proto":"async_iter_prototype","next":"fn(value?: ?) -> +Promise[:t=iter_result]","return":"fn(value?: ?) -> +Promise[:t=iter_result]","throw":"fn(exception: +Error)"},"Proxy_handler":{"getPrototypeOf":"fn(target: ?)","setPrototypeOf":"fn(target: ?, prototype: ?)","isExtensible":"fn(target: ?)","preventExtensions":"fn(target: ?)","getOwnPropertyDescriptor":"fn(target: ?, property: string) -> propertyDescriptor","defineProperty":"fn(target: ?, property: string, descriptor: propertyDescriptor)","has":"fn(target: ?, property: string)","get":"fn(target: ?, property: string)","set":"fn(target: ?, property: string, value: ?)","deleteProperty":"fn(target: ?, property: string)","enumerate":"fn(target: ?)","ownKeys":"fn(target: ?)","apply":"fn(target: ?, self: ?, arguments: [?])","construct":"fn(target: ?, arguments: [?])"},"Proxy_revocable":{"proxy":"+Proxy","revoke":"fn()"},"TypedArray":{"!type":"fn(size: number)","from":{"!type":"fn(arrayLike: ?, mapFn?: fn(elt: ?, i: number) -> number, thisArg?: ?) -> +TypedArray","!effects":["call !1 this=!2 !0.<i> number"]},"of":{"!type":"fn(elements: number) -> +TypedArray"},"BYTES_PER_ELEMENT":{"!type":"number"},"name":{"!type":"string"},"prototype":{"<i>":"number","buffer":{"!type":"+ArrayBuffer"},"byteLength":{"!type":"number"},"byteOffset":{"!type":"number"},"copyWithin":{"!type":"fn(target: number, start: number, end?: number) -> ?"},"entries":{"!type":"fn() -> +iter[:t=number]"},"every":{"!type":"fn(callback: fn(element: number, index: number, array: TypedArray) -> bool, thisArg?: ?) -> bool","!effects":["call !0 this=!1 number number !this"]},"fill":{"!type":"fn(value: number, start?: number, end?: number)"},"filter":{"!type":"fn(test: fn(element: number, i: number) -> bool, context?: ?) -> !this","!effects":["call !0 this=!1 number number"]},"find":{"!type":"fn(callback: fn(element: number, index: number, array: +TypedArray) -> bool, thisArg?: ?) -> number","!effects":["call !0 this=!1 number number !this"]},"findIndex":{"!type":"fn(callback: fn(element: number, index: number, array: +TypedArray) -> bool, thisArg?: ?) -> number","!effects":["call !0 this=!1 number number !this"]},"forEach":{"!type":"fn(callback: fn(value: number, key: number, array: +TypedArray), thisArg?: ?)","!effects":["call !0 this=!1 number number !this"]},"indexOf":{"!type":"fn(searchElement: number, fromIndex?: number) -> number"},"join":{"!type":"fn(separator?: string) -> string"},"keys":{"!type":"fn() -> +iter[:t=number]"},"lastIndexOf":{"!type":"fn(searchElement: number, fromIndex?: number) -> number"},"length":{"!type":"number"},"map":{"!type":"fn(f: fn(element: number, i: number) -> number, context?: ?) -> +TypedArray","!effects":["call !0 this=!1 number number"]},"reduce":{"!type":"fn(combine: fn(sum: ?, elt: number, i: number) -> ?, init?: ?) -> !0.!ret","!effects":["call !0 !1 number number"]},"reduceRight":{"!type":"fn(combine: fn(sum: ?, elt: number, i: number) -> ?, init?: ?) -> !0.!ret","!effects":["call !0 !1 number number"]},"reverse":{"!type":"fn()"},"set":{"!type":"fn(array: [number], offset?: number)"},"slice":{"!type":"fn(from: number, to?: number) -> +TypedArray"},"some":{"!type":"fn(test: fn(elt: number, i: number) -> bool, context?: ?) -> bool","!effects":["call !0 this=!1 number number"]},"sort":{"!type":"fn(compare?: fn(a: number, b: number) -> number)","!effects":["call !0 number number"]},"subarray":{"!type":"fn(begin?: number, end?: number) -> +TypedArray"},"values":{"!type":"fn() -> +iter[:t=number]"},":Symbol.iterator":{"!type":"fn() -> +iter[:t=number]"}}}},"Infinity":{"!type":"number"},"undefined":{"!type":"?"},"NaN":{"!type":"number"},"Object":{"!type":"fn()","getPrototypeOf":{"!type":"fn(obj: ?) -> ?"},"create":{"!type":"fn(proto: ?) -> !custom:Object_create"},"defineProperty":{"!type":"fn(obj: ?, prop: string, desc: propertyDescriptor) -> !custom:Object_defineProperty"},"defineProperties":{"!type":"fn(obj: ?, props: ?) -> !custom:Object_defineProperties"},"getOwnPropertyDescriptor":{"!type":"fn(obj: ?, prop: string) -> propertyDescriptor"},"keys":{"!type":"fn(obj: ?) -> [string]"},"getOwnPropertyNames":{"!type":"fn(obj: ?) -> [string]"},"seal":{"!type":"fn(obj: ?)"},"isSealed":{"!type":"fn(obj: ?) -> bool"},"freeze":{"!type":"fn(obj: ?) -> !0"},"isFrozen":{"!type":"fn(obj: ?) -> bool"},"preventExtensions":{"!type":"fn(obj: ?)"},"isExtensible":{"!type":"fn(obj: ?) -> bool"},"assign":{"!type":"fn(target: ?, source: ?, source?: ?) -> !0","!effects":["copy !1 !0","copy !2 !0","copy !3 !0"]},"getOwnPropertySymbols":{"!type":"fn(obj: ?) -> !custom:getOwnPropertySymbols"},"is":{"!type":"fn(value1: ?, value2: ?) -> bool"},"setPrototypeOf":{"!type":"fn(obj: ?, prototype: ?)"},"prototype":{"!stdProto":"Object","toString":{"!type":"fn() -> string"},"toLocaleString":{"!type":"fn() -> string"},"valueOf":{"!type":"fn() -> number"},"hasOwnProperty":{"!type":"fn(prop: string) -> bool"},"propertyIsEnumerable":{"!type":"fn(prop: string) -> bool"},"isPrototypeOf":{"!type":"fn(obj: ?) -> bool"}}},"Function":{"!type":"fn(body: string) -> fn()","prototype":{"!stdProto":"Function","apply":{"!type":"fn(this: ?, args: [?])","!effects":["call and return !this this=!0 !1.<i> !1.<i> !1.<i>"]},"call":{"!type":"fn(this: ?, args?: ?) -> !this.!ret","!effects":["call and return !this this=!0 !1 !2 !3 !4"]},"bind":{"!type":"fn(this: ?, args?: ?) -> !custom:Function_bind"},"prototype":"?"}},"Array":{"!type":"fn(size: number) -> !custom:Array_ctor","isArray":{"!type":"fn(value: ?) -> bool"},"from":{"!type":"fn(arrayLike: ?, mapFn?: fn(elt: ?, i: number) -> ?, thisArg?: ?) -> [!0.<i>]","!effects":["call !1 this=!2 !0.<i> number"]},"of":{"!type":"fn(elementN: ?) -> [!0]"},"prototype":{"!stdProto":"Array","length":{"!type":"number"},"concat":{"!type":"fn(other: [?]) -> !this"},"join":{"!type":"fn(separator?: string) -> string"},"splice":{"!type":"fn(pos: number, amount: number, newelt?: ?) -> [?]"},"pop":{"!type":"fn() -> !this.<i>"},"push":{"!type":"fn(newelt: ?) -> number","!effects":["propagate !0 !this.<i>"]},"shift":{"!type":"fn() -> !this.<i>"},"unshift":{"!type":"fn(newelt: ?) -> number","!effects":["propagate !0 !this.<i>"]},"slice":{"!type":"fn(from?: number, to?: number) -> !this"},"reverse":{"!type":"fn()"},"sort":{"!type":"fn(compare?: fn(a: ?, b: ?) -> number)","!effects":["call !0 !this.<i> !this.<i>"]},"indexOf":{"!type":"fn(elt: ?, from?: number) -> number"},"lastIndexOf":{"!type":"fn(elt: ?, from?: number) -> number"},"every":{"!type":"fn(test: fn(elt: ?, i: number, array: +Array) -> bool, context?: ?) -> bool","!effects":["call !0 this=!1 !this.<i> number !this"]},"some":{"!type":"fn(test: fn(elt: ?, i: number, array: +Array) -> bool, context?: ?) -> bool","!effects":["call !0 this=!1 !this.<i> number !this"]},"filter":{"!type":"fn(test: fn(elt: ?, i: number, array: +Array) -> bool, context?: ?) -> !this","!effects":["call !0 this=!1 !this.<i> number !this"]},"forEach":{"!type":"fn(f: fn(elt: ?, i: number, array: +Array), context?: ?)","!effects":["call !0 this=!1 !this.<i> number !this"]},"map":{"!type":"fn(f: fn(elt: ?, i: number, array: +Array) -> ?, context?: ?) -> [!0.!ret]","!effects":["call !0 this=!1 !this.<i> number !this"]},"reduce":{"!type":"fn(combine: fn(sum: ?, elt: ?, i: number, array: +Array) -> ?, init?: ?) -> !0.!ret","!effects":["call !0 !1 !this.<i> number !this"]},"reduceRight":{"!type":"fn(combine: fn(sum: ?, elt: ?, i: number, array: +Array) -> ?, init?: ?) -> !0.!ret","!effects":["call !0 !1 !this.<i> number !this"]},"copyWithin":{"!type":"fn(target: number, start: number, end?: number) -> !this"},"entries":{"!type":"fn() -> +iter[:t=[number, !this.<i>]]"},"fill":{"!type":"fn(value: ?, start?: number, end?: number) -> !this"},"find":{"!type":"fn(callback: fn(element: ?, index: number, array: [?]) -> bool, thisArg?: ?) -> !this.<i>","!effects":["call !0 this=!2 !this.<i> number"]},"findIndex":{"!type":"fn(callback: fn(element: ?, index: number, array: [?]), thisArg?: ?) -> number","!effects":["call !0 this=!2 !this.<i> number"]},"keys":{"!type":"fn() -> +iter[:t=number]"},"values":{"!type":"fn() -> +iter[:t=!this.<i>]"},":Symbol.iterator":{"!type":"fn() -> +iter[:t=!this.<i>]"},"includes":{"!type":"fn(value: ?, fromIndex?: number) -> bool"}}},"String":{"!type":"fn(value: ?) -> string","fromCharCode":{"!type":"fn(code: number) -> string"},"fromCodePoint":{"!type":"fn(point: number, point?: number) -> string"},"raw":{"!type":"fn(template: [string], substitutions: ?, templateString: ?) -> string"},"prototype":{"!stdProto":"String","length":{"!type":"number"},"<i>":"string","charAt":{"!type":"fn(i: number) -> string"},"charCodeAt":{"!type":"fn(i: number) -> number"},"indexOf":{"!type":"fn(char: string, from?: number) -> number"},"lastIndexOf":{"!type":"fn(char: string, from?: number) -> number"},"substring":{"!type":"fn(from: number, to?: number) -> string"},"substr":{"!type":"fn(from: number, length?: number) -> string"},"slice":{"!type":"fn(from: number, to?: number) -> string"},"padStart":{"!type":"fn(targetLength: number, padString?: string) -> string"},"padEnd":{"!type":"fn(targetLength: number, padString?: string) -> string"},"trim":{"!type":"fn() -> string"},"trimStart":{"!type":"fn() -> string"},"trimLeft":"String.prototype.trimStart","trimEnd":{"!type":"fn() -> string"},"trimRight":"String.prototype.trimEnd","toUpperCase":{"!type":"fn() -> string"},"toLowerCase":{"!type":"fn() -> string"},"toLocaleUpperCase":{"!type":"fn() -> string"},"toLocaleLowerCase":{"!type":"fn() -> string"},"split":{"!type":"fn(pattern?: string|+RegExp, limit?: number) -> [string]"},"concat":{"!type":"fn(other: string) -> string"},"localeCompare":{"!type":"fn(other: string) -> number"},"match":{"!type":"fn(pattern: +RegExp) -> [string]"},"replace":{"!type":"fn(pattern: string|+RegExp, replacement: string) -> string"},"search":{"!type":"fn(pattern: +RegExp) -> number"},"codePointAt":{"!type":"fn(pos: number) -> number"},"endsWith":{"!type":"fn(searchString: string, position?: number) -> bool"},"includes":{"!type":"fn(searchString: string, position?: number) -> bool"},"normalize":{"!type":"fn(form: string) -> string"},"repeat":{"!type":"fn(count: number) -> string"},"startsWith":{"!type":"fn(searchString: string, position?: number) -> bool"},":Symbol.iterator":{"!type":"fn() -> +iter[:t=string]"}}},"Number":{"!type":"fn(value: ?) -> number","MAX_VALUE":{"!type":"number"},"MIN_VALUE":{"!type":"number"},"POSITIVE_INFINITY":{"!type":"number"},"NEGATIVE_INFINITY":{"!type":"number"},"prototype":{"!stdProto":"Number","toString":{"!type":"fn(radix?: number) -> string"},"toFixed":{"!type":"fn(digits: number) -> string"},"toExponential":{"!type":"fn(digits: number) -> string"},"toPrecision":{"!type":"fn(digits: number) -> string"}},"EPSILON":{"!type":"number"},"MAX_SAFE_INTEGER":{"!type":"number"},"MIN_SAFE_INTEGER":{"!type":"number"},"isFinite":{"!type":"fn(testValue: ?) -> bool"},"isInteger":{"!type":"fn(testValue: ?) -> bool"},"isNaN":{"!type":"fn(testValue: ?) -> bool"},"isSafeInteger":{"!type":"fn(testValue: ?) -> bool"},"parseFloat":{"!type":"fn(string: string) -> number"},"parseInt":{"!type":"fn(string: string, radix?: number) -> number"}},"Boolean":{"!type":"fn(value: ?) -> bool","prototype":{"!stdProto":"Boolean"}},"RegExp":{"!type":"fn(source: string, flags?: string)","prototype":{"!stdProto":"RegExp","exec":{"!type":"fn(input: string) -> [string]"},"test":{"!type":"fn(input: string) -> bool"},"global":{"!type":"bool"},"ignoreCase":{"!type":"bool"},"multiline":{"!type":"bool"},"source":{"!type":"string"},"lastIndex":{"!type":"number"},"flags":{"!type":"string"},"sticky":{"!type":"bool"},"unicode":{"!type":"bool"}}},"Date":{"!type":"fn(ms: number)","parse":{"!type":"fn(source: string) -> +Date"},"UTC":{"!type":"fn(year: number, month: number, date: number, hour?: number, min?: number, sec?: number, ms?: number) -> number"},"now":{"!type":"fn() -> number"},"prototype":{"toUTCString":{"!type":"fn() -> string"},"toISOString":{"!type":"fn() -> string"},"toDateString":{"!type":"fn() -> string"},"toGMTString":{"!type":"fn() -> string"},"toTimeString":{"!type":"fn() -> string"},"toLocaleDateString":{"!type":"fn() -> string"},"toLocaleFormat":{"!type":"fn(formatString: string) -> string"},"toLocaleString":{"!type":"fn(locales?: string, options?: ?) -> string"},"toLocaleTimeString":{"!type":"fn() -> string"},"toSource":{"!type":"fn() -> string"},"toString":{"!type":"fn() -> string"},"valueOf":{"!type":"fn() -> number"},"getTime":{"!type":"fn() -> number"},"getFullYear":{"!type":"fn() -> number"},"getYear":{"!type":"fn() -> number"},"getMonth":{"!type":"fn() -> number"},"getUTCMonth":{"!type":"fn() -> number"},"getDate":{"!type":"fn() -> number"},"getUTCDate":{"!type":"fn() -> number"},"getDay":{"!type":"fn() -> number"},"getUTCDay":{"!type":"fn() -> number"},"getUTCFullYear":{"!type":"fn() -> number"},"getHours":{"!type":"fn() -> number"},"getUTCHours":{"!type":"fn() -> number"},"getMinutes":{"!type":"fn() -> number"},"getUTCMinutes":{"!type":"fn() -> number"},"getSeconds":{"!type":"fn() -> number"},"getUTCSeconds":{"!type":"fn() -> number"},"getMilliseconds":{"!type":"fn() -> number"},"getUTCMilliseconds":{"!type":"fn() -> number"},"getTimezoneOffset":{"!type":"fn() -> number"},"setTime":{"!type":"fn(date: +Date) -> number"},"setFullYear":{"!type":"fn(year: number) -> number"},"setUTCFullYear":{"!type":"fn(year: number) -> number"},"setYear":{"!type":"fn(yearValue: number) -> number"},"setMonth":{"!type":"fn(month: number) -> number"},"setUTCMonth":{"!type":"fn(month: number) -> number"},"setDate":{"!type":"fn(day: number) -> number"},"setUTCDate":{"!type":"fn(day: number) -> number"},"setHours":{"!type":"fn(hour: number) -> number"},"setUTCHours":{"!type":"fn(hour: number) -> number"},"setMinutes":{"!type":"fn(min: number) -> number"},"setUTCMinutes":{"!type":"fn(min: number) -> number"},"setSeconds":{"!type":"fn(sec: number) -> number"},"setUTCSeconds":{"!type":"fn(sec: number) -> number"},"setMilliseconds":{"!type":"fn(ms: number) -> number"},"setUTCMilliseconds":{"!type":"fn(ms: number) -> number"},"toJSON":{"!type":"fn() -> string"}}},"Error":{"!type":"fn(message: string)","prototype":{"name":{"!type":"string"},"message":{"!type":"string"}}},"SyntaxError":{"!type":"fn(message: string)","prototype":"Error.prototype"},"ReferenceError":{"!type":"fn(message: string)","prototype":"Error.prototype"},"URIError":{"!type":"fn(message: string)","prototype":"Error.prototype"},"EvalError":{"!type":"fn(message: string)","prototype":"Error.prototype"},"RangeError":{"!type":"fn(message: string)","prototype":"Error.prototype"},"TypeError":{"!type":"fn(message: string)","prototype":"Error.prototype"},"parseInt":{"!type":"fn(string: string, radix?: number) -> number"},"parseFloat":{"!type":"fn(string: string) -> number"},"isNaN":{"!type":"fn(value: number) -> bool"},"isFinite":{"!type":"fn(value: number) -> bool"},"eval":{"!type":"fn(code: string) -> ?"},"encodeURI":{"!type":"fn(uri: string) -> string"},"encodeURIComponent":{"!type":"fn(uri: string) -> string"},"decodeURI":{"!type":"fn(uri: string) -> string"},"decodeURIComponent":{"!type":"fn(uri: string) -> string"},"Math":{"E":{"!type":"number"},"LN2":{"!type":"number"},"LN10":{"!type":"number"},"LOG2E":{"!type":"number"},"LOG10E":{"!type":"number"},"SQRT1_2":{"!type":"number"},"SQRT2":{"!type":"number"},"PI":{"!type":"number"},"abs":{"!type":"fn(number) -> number"},"cos":{"!type":"fn(number) -> number"},"sin":{"!type":"fn(number) -> number"},"tan":{"!type":"fn(number) -> number"},"acos":{"!type":"fn(number) -> number"},"asin":{"!type":"fn(number) -> number"},"atan":{"!type":"fn(number) -> number"},"atan2":{"!type":"fn(y: number, x: number) -> number"},"ceil":{"!type":"fn(number) -> number"},"floor":{"!type":"fn(number) -> number"},"round":{"!type":"fn(number) -> number"},"exp":{"!type":"fn(number) -> number"},"log":{"!type":"fn(number) -> number"},"sqrt":{"!type":"fn(number) -> number"},"pow":{"!type":"fn(number, number) -> number"},"max":{"!type":"fn(number, number) -> number"},"min":{"!type":"fn(number, number) -> number"},"random":{"!type":"fn() -> number"},"acosh":{"!type":"fn(x: number) -> number"},"asinh":{"!type":"fn(x: number) -> number"},"atanh":{"!type":"fn(x: number) -> number"},"cbrt":{"!type":"fn(x: number) -> number"},"clz32":{"!type":"fn(x: number) -> number"},"cosh":{"!type":"fn(x: number) -> number"},"expm1":{"!type":"fn(x: number) -> number"},"fround":{"!type":"fn(x: number) -> number"},"hypot":{"!type":"fn(value: number) -> number"},"imul":{"!type":"fn(a: number, b: number) -> number"},"log10":{"!type":"fn(x: number) -> number"},"log1p":{"!type":"fn(x: number) -> number"},"log2":{"!type":"fn(x: number) -> number"},"sign":{"!type":"fn(x: number) -> number"},"sinh":{"!type":"fn(x: number) -> number"},"tanh":{"!type":"fn(x: number) -> number"},"trunc":{"!type":"fn(x: number) -> number"}},"JSON":{"parse":{"!type":"fn(json: string, reviver?: fn(key: string, value: ?) -> ?) -> ?"},"stringify":{"!type":"fn(value: ?, replacer?: fn(key: string, value: ?) -> ?, space?: string|number) -> string"}},"ArrayBuffer":{"!type":"fn(length: number)","isView":{"!type":"fn(arg: +ArrayBuffer) -> bool"},"prototype":{"byteLength":{"!type":"number"},"slice":{"!type":"fn(begin: number, end?: number) -> +ArrayBuffer"}}},"DataView":{"!type":"fn(buffer: +ArrayBuffer, byteOffset?: number, byteLength?: number)","prototype":{"buffer":{"!type":"+ArrayBuffer"},"byteLength":{"!type":"number"},"byteOffset":{"!type":"number"},"getFloat32":{"!type":"fn(byteOffset: number, littleEndian?: bool) -> number"},"getFloat64":{"!type":"fn(byteOffset: number, littleEndian?: bool) -> number"},"getInt16":{"!type":"fn(byteOffset: number, littleEndian?: bool) -> number"},"getInt32":{"!type":"fn(byteOffset: number, littleEndian?: bool) -> number"},"getInt8":{"!type":"fn(byteOffset: number, littleEndian?: bool) -> number"},"getUint16":{"!type":"fn(byteOffset: number, littleEndian?: bool) -> number"},"getUint32":{"!type":"fn(byteOffset: number, littleEndian?: bool) -> number"},"getUint8":{"!type":"fn(byteOffset: number) -> number"},"setFloat32":{"!type":"fn(byteOffset: number, value: number, littleEndian?: bool)"},"setFloat64":{"!type":"fn(byteOffset: number, value: number, littleEndian?: bool)"},"setInt16":{"!type":"fn(byteOffset: number, value: number, littleEndian?: bool)"},"setInt32":{"!type":"fn(byteOffset: number, value: number, littleEndian?: bool)"},"setInt8":{"!type":"fn(byteOffset: number, value: number)"},"setUint16":{"!type":"fn(byteOffset: number, value: number, littleEndian?: bool)"},"setUint32":{"!type":"fn(byteOffset: number, value: number, littleEndian?: bool)"},"setUint8":{"!type":"fn(byteOffset: number, value: number)"}}},"Float32Array":"TypedArray","Float64Array":"TypedArray","Int16Array":"TypedArray","Int32Array":"TypedArray","Int8Array":"TypedArray","Map":{"!type":"fn(iterable?: [?])","prototype":{"clear":{"!type":"fn()"},"delete":{"!type":"fn(key: ?)"},"entries":{"!type":"fn() -> +iter[:t=[!this.:key, !this.:value]]"},"forEach":{"!type":"fn(callback: fn(value: ?, key: ?, map: +Map), thisArg?: ?)","!effects":["call !0 this=!1 !this.:value !this.:key !this"]},"get":{"!type":"fn(key: ?) -> !this.:value"},"has":{"!type":"fn(key: ?) -> bool"},"keys":{"!type":"fn() -> +iter[:t=!this.:key]"},"set":{"!type":"fn(key: ?, value: ?) -> !this","!effects":["propagate !0 !this.:key","propagate !1 !this.:value"]},"size":{"!type":"number"},"values":{"!type":"fn() -> +iter[:t=!this.:value]"},":Symbol.iterator":{"!type":"fn() -> +iter[:t=[!this.:key, !this.:value]]"}}},"Promise":{"!type":"fn(executor: fn(resolve: fn(value: ?), reject: fn(reason: ?))) -> !custom:Promise_ctor","all":{"!type":"fn(iterable: [+Promise]) -> +Promise[:t=[!0.<i>.:t]]"},"race":{"!type":"fn(iterable: [+Promise]) -> !0.<i>"},"reject":"Promise_reject","resolve":{"!type":"fn(value: ?) -> !custom:Promise_resolve"},"prototype":"Promise.prototype"},"Proxy":{"!type":"fn(target: ?, handler: Proxy_handler)","revocable":{"!type":"fn(target: ?, handler: Proxy_handler) -> Proxy_revocable"}},"Reflect":{"apply":{"!type":"fn(target: fn(), thisArg?: ?, argumentList?: [?]) -> !0.!ret"},"construct":{"!type":"fn(target: fn(), argumentList?: [?]) -> ?"},"defineProperty":{"!type":"fn(target: ?, property: string, descriptor: propertyDescriptor) -> bool"},"deleteProperty":{"!type":"fn(target: ?, property: string) -> bool"},"enumerate":{"!type":"fn(target: ?) -> +iter[:t=string]"},"get":{"!type":"fn(target: ?, property: string) -> ?"},"getOwnPropertyDescriptor":{"!type":"fn(target: ?, property: string) -> ?"},"getPrototypeOf":{"!type":"fn(target: ?) -> ?"},"has":{"!type":"fn(target: ?, property: string) -> bool"},"isExtensible":{"!type":"fn(target: ?) -> bool"},"ownKeys":{"!type":"fn(target: ?) -> [string]"},"preventExtensions":{"!type":"fn(target: ?) -> bool"},"set":{"!type":"fn(target: ?, property: string, value: ?) -> bool"},"setPrototypeOf":{"!type":"fn(target: ?, prototype: ?) -> bool"}},"Set":{"!type":"fn(iterable?: [?])","prototype":{"add":{"!type":"fn(value: ?) -> !this","!effects":["propagate !0 !this.:t"]},"clear":{"!type":"fn()"},"delete":{"!type":"fn(value: ?) -> bool"},"entries":{"!type":"fn() -> +iter[:t=[!this.:t]]"},"forEach":{"!type":"fn(callback: fn(value: ?, value2: ?, set: +Set), thisArg?: ?)","!effects":["call !0 this=!1 !this.:t number !this"]},"has":{"!type":"fn(value: ?) -> bool"},"keys":{"!type":"fn() -> +iter[:t=!this.:t]"},"size":{"!type":"number"},"values":{"!type":"fn() -> +iter[:t=!this.:t]"},":Symbol.iterator":{"!type":"fn() -> +iter[:t=!this.:t]"}}},"Symbol":{"!type":"fn(description?: string) -> !custom:getSymbol","for":{"!type":"fn(key: string) -> !custom:getSymbol"},"keyFor":{"!type":"fn(sym: +Symbol) -> string"},"hasInstance":":Symbol.hasInstance","isConcatSpreadable":":Symbol.isConcatSpreadable","iterator":":Symbol.iterator","asyncIterator":":Symbol.asyncIterator","match":":Symbol.match","replace":":Symbol.replace","search":":Symbol.search","species":":Symbol.species","split":":Symbol.split","toStringTag":":Symbol.toStringTag","unscopables":":Symbol.unscopables","prototype":{"!stdProto":"Symbol"}},"Uint16Array":"TypedArray","Uint32Array":"TypedArray","Uint8Array":"TypedArray","Uint8ClampedArray":"TypedArray","WeakMap":{"!type":"fn(iterable?: [?])","prototype":{"delete":{"!type":"fn(key: ?) -> bool"},"get":{"!type":"fn(key: ?) -> !this.:value"},"has":{"!type":"fn(key: ?) -> bool"},"set":{"!type":"fn(key: ?, value: ?)","!effects":["propagate !0 !this.:key","propagate !1 !this.:value"]}}},"WeakSet":{"!type":"fn(iterable?: [?])","prototype":{"add":{"!type":"fn(value: ?)"},"delete":{"!type":"fn(value: ?) -> bool"},"has":{"!type":"fn(value: ?) -> bool"}}}}')},840:function(e){e.exports=JSON.parse('{"!name":"pw-pre","pw":{"env":{"set":"fn(key: string, value: string)"}}}')},841:function(e){e.exports=JSON.parse('{"!name":"pw-test","!define":{"Expectation":{"not":"Expectation","toBe":"fn(value: ?)","toBeLevel2xx":"fn()","toBeLevel3xx":"fn()","toBeLevel4xx":"fn()","toBeLevel5xx":"fn()","toBeType":"fn(type: string)","toHaveLength":"fn(length: number)"}},"pw":{"expect":"fn(value: ?) -> Expectation","response":{"status":"number","headers":"?","body":"?"},"test":"fn(name: string, func: fn())"}}')},842:function(e){e.exports=JSON.parse('{"!name":"pw-extra","console":{"assert":{"!type":"fn(assertion: bool, text: string)"},"clear":{"!type":"fn()"},"count":{"!type":"fn(label?: string)"},"debug":"console.log","dir":{"!type":"fn(object: ?)"},"error":{"!type":"fn(...msg: ?)"},"group":{"!type":"fn(label?: string)"},"groupCollapsed":{"!type":"fn(label?: string)"},"groupEnd":{"!type":"fn()"},"info":{"!type":"fn(...msg: ?)"},"log":{"!type":"fn(...msg: ?)"},"table":{"!type":"fn(data: []|?, columns?: [])"},"time":{"!type":"fn(label: string)"},"timeEnd":{"!type":"fn(label: string)"},"trace":{"!type":"fn()"},"warn":{"!type":"fn(...msg: ?)"}}}')},843:function(e,t,n){"use strict";n(777)},844:function(e,t,n){var r=n(63)((function(i){return i[1]}));r.push([e.i,".show-if-initialized{opacity:0}.show-if-initialized.initialized{opacity:1}.show-if-initialized>*{transition-property:none}",""]),e.exports=r},893:function(e,t,n){"use strict";n.r(t);n(38),n(34),n(48),n(27),n(49);var r=n(15),o=(n(50),n(33),n(56),n(93),n(57),n(28),n(67),n(682)),f=n.n(o),y=(n(683),n(799),n(800),n(867)),l=n(659),m=(n(17),n(825),n(158),n(801)),c=n.n(m),d=(n(254),n(124),n(802)),h=n.n(d),v=n(870),x={UnknownProperty:{severity:"warning"},UnknownIdentifier:{severity:"warning"},NotAFunction:{severity:"error"},InvalidArgument:{severity:"error"},UnusedVariable:{severity:"warning"},UnknownModule:{severity:"error"},MixedReturnTypes:{severity:"warning"},ObjectLiteral:{severity:"error"},TypeMismatch:{severity:"warning"},Array:{severity:"error"},ES6Modules:{severity:"error"}};function T(e,t,n,r){function o(e,o,f){var y=function(e,r,o){var f=l(e),y={message:r,from:c.a.outputPos(t,n,f.start),to:c.a.outputPos(t,n,f.end),severity:o};t.lineNumber&&(y.lineNumber=t.lineCharPositions?y.from.line:c.a.outputPos({lineCharPositions:!0},n,f.start).line);t.groupByFiles||(y.file=n.name);return y}(e,o,f);r.push(y)}function f(e){return e.callee?f(e.callee):e.property?e.property.name:e.name}function y(e){if(e.callee)return y(e.callee);if(e.property)return e.property.value;if("Identifier"===e.type){var t={type:"definition",start:e.start,end:e.end},r=c.a.findQueryExpr(n,t),o=h.a.expressionType(r).getType();return o&&o.originNode?y(o.originNode):null}return e.value}function l(e){return e.callee?l(e.callee):e.property?e.property:e}function m(e){if(!e)return"Unknown type";if(e.types){for(var t=e.types,s="",i=0;i<t.length;i++){i>0&&(s+="|");var n=m(t[i]);"Unknown type"!=n&&(s+=n)}return""==s?"Unknown type":s}return e.name?e.name:e.proto?e.proto.name:"Unknown type"}function d(e){return!e||e.types&&0==e.types.length}function v(e,t){if(d(e)||d(t))return!0;if(e.types){for(var i=0;i<e.types.length;i++)if(t.types){for(var n=0;n<t.types.length;n++)if(v(e.types[i],t.types[n]))return!0}else if(v(e.types[i],t.getType()))return!0;return!1}if(t.types)for(i=0;i<t.types.length;i++)if(v(e.getType(),t.types[i]))return!0;var r=e.getType(),o=t.getType();if(!r||!o)return!0;for(var f=o.proto;f;){if(r.proto&&r.proto.name===f.name)return!0;f=f.proto}return!1}function x(e){var t=e.getObjType();return t&&t.proto&&"Object.prototype"==t.proto.name}function T(e){if(e.types)for(var i=0;i<e.types.length;i++)if(T(e.types[i]))return!0;return e.proto&&"Function.prototype"==e.proto.name}function E(e,t,n){var r=w("NotAFunction"),l=w("InvalidArgument");if(r||l){var c=h.a.expressionType({node:e.callee,state:t});if(!c.isEmpty()){var d=c.getFunctionType();if(null==d)return void(r&&!T(c)&&o(e,"'"+f(e)+"' is not a function",r.severity));var E=function(e){return e.lint?e.lint:e.metaData?(e.lint=S(e.metaData["!lint"]),e.lint):void 0}(d);if((!E||E(e,o,w))&&d.args){if(!l)return;var O=e.arguments;if(!O)return;for(var P=d.args,i=0;i<P.length;i++){var A=P[i];if(O.length>i){var I=O[i];if(function(e,t){return!!e&&!!e.proto&&e.proto.name===t}(A.getType(),"RegExp.prototype")){var k=y(I);if(k)try{new RegExp(k)}catch(e){o(I,"Invalid argument at "+(i+1)+": "+e,l.severity)}}else{var j=h.a.expressionType({node:I,state:t});A.getObjType()&&x(j)||v(A,j)||o(I,"Invalid argument at "+(i+1)+": cannot convert from "+m(j)+" to "+m(A),l.severity)}}}}}}}function O(e,t,n,r){if(e&&t&&n){var f=h.a.expressionType({node:e,state:r}),y=h.a.expressionType({node:t,state:r});v(f,y)||o(t,"Type mismatch: cannot convert from "+m(f)+" to "+m(y),n.severity)}}function P(t,r,y){function l(e,t,n,r){for(var o=e.name,f=t;f&&!(o in f.props);f=f.prev);if(!f)return!1;var y=!1;function l(t){return function(t,n){if(t!=e)throw y=!0,new Error}}try{if(f.node)h.a.findRefs(f.node,f,o,f,l());else{h.a.findRefs(n.ast,n.scope,o,f,l());for(var i=0;i<r.files.length&&!y;++i){var m=r.files[i];m!=n&&h.a.findRefs(m.ast,m.scope,o,f,l())}}}catch(e){}return y}var m=w("UnusedVariable"),c=w("TypeMismatch");if(m||c)switch(t.type){case"VariableDeclaration":for(var i=0;i<t.declarations.length;++i){var d=t.declarations[i];"✖"!=(v=d.id).name&&(m&&!l(v,r,n,e)&&o(v,"Unused variable '"+f(v)+"'",m.severity),c&&O(v,d.init,c,r))}break;case"FunctionDeclaration":var v;if(m)"✖"==(v=t.id).name||l(v,r,n,e)||o(v,"Unused function '"+f(v)+"'",m.severity)}}function A(e){if(e instanceof h.a.Arr)return e.getObjType();if(e.types)for(var i=0;i<e.types.length;i++)if(A(e.types[i]))return e.types[i]}return{VariableDeclaration:P,FunctionDeclaration:P,ReturnStatement:function(e,t,n){if(e.argument){var r=w("MixedReturnTypes");if(r&&t.fnType&&t.fnType.retval){var f=h.a.expressionType({node:e.argument,state:t}),y=t.fnType.retval;v(y,f)||o(e,"Invalid return type : cannot convert from "+m(f)+" to "+m(y),r.severity)}}},MemberExpression:function(e,t,n){var r=w("UnknownProperty");if(r){var y=e.property&&e.property.name;if(y&&"✖"!=y){var l=h.a.expressionType({node:e,state:t}),m=h.a.expressionType({node:e.object,state:t});if(!e.computed&&!m.isEmpty()&&l.isEmpty()){var c=!1;m.types&&m.types.forEach((function(e){"function"==typeof e.hasProp&&e.hasProp(y,!0)&&(c=!0)})),c||o(e,"Unknown property '"+f(e)+"'",r.severity)}}}},Identifier:function(e,t,n){var r=w("UnknownIdentifier");if(r){var y=h.a.expressionType({node:e,state:t});null!=y.originNode||null!=y.origin||y.isEmpty()&&o(e,"Unknown identifier '"+f(e)+"'",r.severity)}},NewExpression:E,CallExpression:E,AssignmentExpression:function(e,t,n){var r=w("TypeMismatch");O(e.left,e.right,r,t)},ObjectExpression:function(e,t,r){var f=w("ObjectLiteral");if(f){var y=e.objType,l=h.a.typeFromContext(n.ast,{node:e,state:t}),c=null;if(l instanceof h.a.Obj)c=l.getObjType();else if(l&&l.makeupType){var d=l.makeupType();d&&d.getObjType()&&(c=d.getObjType())}c&&c!=y&&function(e,t,n,r){for(var f=e.properties,y=t.getType(),i=0;i<f.length;i++){var l=f[i],c=l.key,d=c&&c.name,h=l.value;if(d){var x=y.hasProp(d);if(x){var T=n.props[d];v(x,T)||o(h,"Invalid property at "+(i+1)+": cannot convert from "+m(T)+" to "+m(x),r.severity)}else o(c,"Invalid property at "+(i+1)+": "+d+" is not a property in "+m(t),r.severity)}}}(e,c,y,f)}},ArrayExpression:function(e,t,r){var f=w("Array");if(f){var y=A(h.a.typeFromContext(n.ast,{node:e,state:t}));y&&function(e,t,n,r){for(var f=e.elements,y=t.hasProp("<i>"),i=0;i<f.length;i++){var l=f[i],c=h.a.expressionType({node:l,state:n});v(y,c)||o(l,"Invalid item at "+(i+1)+": cannot convert from "+m(c)+" to "+m(y),r.severity)}}(e,y,t,f)}},ImportDeclaration:function(e,t,n){var r=w("ES6Modules");if(r){var y=h.a.cx().parent.mod.modules;if(y){var source=e.source;if(source){var l=y.getModType(source);if(l){var m=e.specifiers;if(m)for(var i=0;i<m.length;i++){var c=m[i].imported;if(c){var d=c.name;l.hasProp(d)||o(c,"Invalid modules specifier '"+f(c)+"'",r.severity)}}}else o(source,"Invalid modules from '"+source.value+"'",r.severity)}}}}}}v.make({Function:function(e,t,n){var r=e.scope;e.id&&n(e.id,r);for(var i=0;i<e.params.length;++i)n(e.params[i],r);n(e.body,r,"ScopeBody")},Statement:function(e,t,n){n(e,e.scope||t)}});var E=Object.create(null),S=c.a.getLint=function(e){return e?E[e]:null};function O(e){var t={};for(var n in x)e&&e.rules&&e.rules[n]&&e.rules[n].severity?"none"!=e.rules[n].severity&&(t[n]=e.rules[n]):t[n]=x[n];return t}function w(e){var t=h.a.cx().parent;return(t&&t._lint&&t._lint.rules?t._lint.rules:x)[e]}var P=n(839),A=n(840),I=n(841),k=n(842),j=new c.a.Server({defs:[P,k],plugins:{lint:{rules:[]}}});function _(code){return new Promise((function(e,t){j.request({query:{type:"lint",file:"doc",lineCharPositions:!0},files:[{type:"full",name:"doc",text:code}]},(function(n,r){n?t(n):e(r.messages)}))}))}function U(code,e,col){return new Promise((function(t,n){j.request({query:{type:"completions",file:"doc",end:{line:e,ch:col},guess:!1,types:!0,includeKeywords:!0,inLiteral:!1},files:[{type:"full",name:"doc",text:code}]},(function(e,r){e?n(e):t(function(e){if(e.completions){var t=e.completions.findIndex((function(e){return"pw"===e.name}));if(-1!==t){var n=e.completions[t];e.completions.splice(t,1),e.completions.splice(0,0,n)}}return e}(r))}))}))}function D(object,e){var t=Object.keys(object);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(object);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(object,e).enumerable}))),t.push.apply(t,n)}return t}c.a.defineQueryType("lint",{takesFile:!0,run:function(e,t,n){return function(e,t,n){try{var r=[],o=n.ast,f=n.scope,y=T(e,t,n,r);return v.simple(o,y,h.a.searchVisitor,f),{messages:r}}catch(e){return console.error(e.stack),{messages:[]}}}(e,t,n)}}),c.a.defineQueryType("lint-full",{run:function(e,t){return function(e,t){try{for(var n=[],r=e.files,o=1==t.groupByFiles,i=0;i<r.length;++i){var f=o?[]:n,y=r[i],l=y.ast,m=y.scope,c=T(e,t,y,f);v.simple(l,c,h.a.searchVisitor,m),o&&n.push({file:y.name,messages:f})}return{messages:n}}catch(e){return console.error(e.stack),{messages:[]}}}(e,t)}}),c.a.registerPlugin("lint",(function(e,t){return e._lint={rules:O(t)},{passes:{},loadFirst:!0}}));var C={props:{value:{type:String,default:""},theme:{type:String,required:!1,default:null},options:{type:Object,default:function(){}},styles:{type:String,default:""},completeMode:{type:String,required:!0,default:"none"}},data:function(){return{initialized:!1,editor:null,cacheValue:""}},watch:{value:function(e){e!==this.cacheValue&&(this.editor.session.setValue(e,1),this.cacheValue=e,this.lint&&this.provideLinting(e))},theme:function(){var e=this;this.initialized=!1,this.editor.setTheme("ace/theme/".concat(this.defineTheme()),(function(){e.$nextTick().then((function(){e.initialized=!0})).catch((function(){e.initialized=!0}))}))},options:function(e){this.editor.setOptions(e)}},mounted:function(){var e=this,t=f.a.edit(this.$refs.editor,function(e){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?D(Object(source),!0).forEach((function(t){Object(r.a)(e,t,source[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(source)):D(Object(source)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(source,t))}))}return e}({mode:"ace/mode/javascript",enableBasicAutocompletion:!0,enableLiveAutocompletion:!0},this.options));t.setTheme("ace/theme/".concat(this.defineTheme()),(function(){e.$nextTick().then((function(){e.initialized=!0})).catch((function(){e.initalized=!0}))}));var n={getCompletions:function(t,n,r,o,f){var y=r.row,l=r.column;"pre"===e.completeMode?function(code,e,col){return j.deleteDefs("pw-test"),j.deleteDefs("pw-pre"),j.addDefs(A),U(code,e,col)}(t.getValue(),y,l).then((function(e){f(null,e.completions.map((function(e,t,n){return{name:e.name,value:e.name,score:(n.length-t)/n.length,meta:e.type}})))})).catch((function(){return f(null,[])})):"test"===e.completeMode&&function(code,e,col){return j.deleteDefs("pw-test"),j.deleteDefs("pw-pre"),j.addDefs(I),U(code,e,col)}(t.getValue(),y,l).then((function(e){f(null,e.completions.map((function(e,t,n){return{name:e.name,value:e.name,score:(n.length-t)/n.length,meta:e.type}})))})).catch((function(){return f(null,[])}))}};t.completers=[n],this.value&&t.setValue(this.value,1),this.editor=t,this.cacheValue=this.value,t.on("change",(function(){var content=t.getValue();e.$emit("input",content),e.cacheValue=content,e.provideLinting(content)})),this.provideLinting(this.value)},destroyed:function(){this.editor.destroy()},methods:{defineTheme:function(){if(this.theme)return this.theme;return window.getComputedStyle(document.documentElement).getPropertyValue("--editor-theme").replace(/#/g,"").replace(/ /g,"").replace(/"/g,"")},provideLinting:Object(l.a)((function(code){var e=this,t=[];(function(code){return j.deleteDefs("pw-test"),j.deleteDefs("pw-pre"),j.addDefs(A),_(code)})(code).then((function(n){t=t.concat(n.map((function(e){return{row:e.from.line,column:e.from.ch,text:"[semantic] ".concat(e.message),type:"error"}})));try{var r=y.parseScript(code,{tolerant:!0});r.errors&&r.errors.length>0&&(t=t.concat(r.errors.map((function(t){var n=e.editor.session.getDocument().indexToPosition(t.index,0);return{row:n.row,column:n.column,text:"[syntax] ".concat(t.description),type:"error"}}))))}catch(n){var o=e.editor.session.getDocument().indexToPosition(n.index,0);t=t.concat([{row:o.row,column:o.column,text:"[syntax] ".concat(n.description),type:"error"}])}e.editor.session.setAnnotations(t)})).catch((function(){try{var n=y.parseScript(code,{tolerant:!0});n.errors&&n.errors.length>0&&(t=t.concat(n.errors.map((function(t){var n=e.editor.session.getDocument().indexToPosition(t.index,0);return{row:n.row,column:n.column,text:"[syntax] ".concat(t.description),type:"error"}}))))}catch(n){var r=e.editor.session.getDocument().indexToPosition(n.index,0);t=t.concat([{row:r.row,column:r.column,text:"[syntax] ".concat(n.description),type:"error"}])}e.editor.session.setAnnotations(t)}))}),2e3)}},F=(n(843),n(16)),component=Object(F.a)(C,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"show-if-initialized",class:{initialized:e.initialized}},[n("pre",{ref:"editor",class:e.styles})])}),[],!1,null,null,null);t.default=component.exports}}]);